using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MySql.Data.MySqlClient;
using MySql.Data;

namespace Exercice_Comptable_Exploitation
{
    class cls_InteractionBase
    {
        private MySqlConnection c_cnn;
        public cls_InteractionBase(string pNomBase)
        {            
            string connetionString;
            connetionString = string.Format(@"Data Source=localhost;Initial Catalog=" + pNomBase + ";User ID=root;Password=");
            c_cnn = new MySqlConnection(connetionString);
            c_cnn.Open();
        }
        public void ChargementDonneeBase()
        {
            ChargementCommuneBase();
            ChargementAgenceBase();
            ChargementComptableBase();
            ChargementExploitationBase();
            ChargementAgenceAvecDirecteurBase();
        }
        public void FermetureBase()
        {
            c_cnn.Close();
        }
        private void ChargementCommuneBase()
        {
            string QueryCommune = "SELECT ID, Nom FROM commune";
            var cmdCommune = new MySqlCommand(QueryCommune, c_cnn);
            Dictionary<long, cls_Commune> l_ListeCommune = new Dictionary<long, cls_Commune>();
            Dictionary<long, cls_Commune> l_ListeCommuneOriginale = new Dictionary<long, cls_Commune>();
            var reader = cmdCommune.ExecuteReader();
            cls_Commune l_Commune;
            while (reader.Read())
            {
                l_Commune = new cls_Commune(reader.GetInt64(0), reader.GetString(1));
                l_ListeCommune.Add(reader.GetInt64(0), l_Commune);
                l_ListeCommuneOriginale.Add(reader.GetInt64(0), l_Commune);
            }
            cls_Commune.setListeCommune(l_ListeCommune);
            cls_Commune.setListeCommuneOriginale(l_ListeCommuneOriginale);
            reader.Close();
        }
        private void ChargementAgenceBase()
        {
            string Query = "SELECT a.ID, a.Nom, a.ID_Commune, a.ID_Directeur FROM agence a, commune com, comptable cmp WHERE a.ID_Commune = com.ID AND a.ID_Directeur = cmp.ID";
            var cmdAgence = new MySqlCommand(Query, c_cnn);
            var reader = cmdAgence.ExecuteReader();
            Dictionary<long, cls_Agence> l_ListeAgence = new Dictionary<long, cls_Agence>();
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            cls_Agence l_Agence;
            while (reader.Read())
            {
                l_Agence = new cls_Agence(reader.GetInt64(0), reader.GetString(1), l_ListeCommune[reader.GetInt64(2)]);
                l_ListeAgence.Add(reader.GetInt64(0), l_Agence);
            }
            cls_Agence.setListeAgence(l_ListeAgence);
            reader.Close();
        }
        private void ChargementComptableBase()
        {
            string QueryComptable = "SELECT c.ID, c.Nom, c.DateDeNaissance, c.ID_Agence FROM comptable c, agence a WHERE c.ID_Agence = a.ID";
            var cmdComptable = new MySqlCommand(QueryComptable, c_cnn);
            Dictionary<long, cls_Comptable> l_ListeComptable = new Dictionary<long, cls_Comptable>();
            Dictionary<long, cls_Comptable> l_ListeComptableOriginale = new Dictionary<long, cls_Comptable>();
            Dictionary<long, cls_Agence> l_ListeAgence = cls_Agence.getListeAgence;
            var reader = cmdComptable.ExecuteReader();
            cls_Comptable l_Comptable;

            while (reader.Read())
            {
                l_Comptable = new cls_Comptable(reader.GetInt64(0), reader.GetString(1), reader.GetDateTime(2), l_ListeAgence[reader.GetInt64(3)]);
                l_ListeComptable.Add(reader.GetInt64(0), l_Comptable);
                l_ListeComptableOriginale.Add(reader.GetInt64(0), l_Comptable);
            }
            cls_Comptable.setListeComptable(l_ListeComptable);
            cls_Comptable.setListeComptableOriginale(l_ListeComptableOriginale);
            reader.Close();
        }
        private void ChargementExploitationBase()
        {
            string QueryExploitation = "SELECT e.ID, e.Nom, e.SAU, e.ID_Comptable, e.ID_Commune FROM exploitation e, commune com, comptable cmp WHERE e.ID_Commune = com.ID AND e.ID_Comptable = cmp.ID";
            var cmdExploitation = new MySqlCommand(QueryExploitation, c_cnn);
            Dictionary<long, cls_Exploitation> l_ListeExploitation = new Dictionary<long, cls_Exploitation>();
            Dictionary<long, cls_Exploitation> l_ListeExploitationOriginale = new Dictionary<long, cls_Exploitation>();
            Dictionary<long, cls_Comptable> l_ListeComptable = cls_Comptable.getListeComptable;
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            var reader = cmdExploitation.ExecuteReader();
            cls_Exploitation l_Exploitation;

            while (reader.Read())
            {
                l_Exploitation = new cls_Exploitation(reader.GetInt64(0), reader.GetString(1), reader.GetInt64(2), l_ListeComptable[reader.GetInt64(3)], l_ListeCommune[reader.GetInt64(4)]);
                l_ListeExploitation.Add(reader.GetInt64(0), l_Exploitation);
                l_ListeExploitationOriginale.Add(reader.GetInt64(0), l_Exploitation);

            }
            cls_Exploitation.setListeExploitation(l_ListeExploitation);
            cls_Exploitation.setListeExploitationOriginale(l_ListeExploitationOriginale);
            reader.Close();
        }
        private void ChargementAgenceAvecDirecteurBase()
        {
            string Query = "SELECT a.ID, a.Nom, a.ID_Commune, a.ID_Directeur FROM agence a, commune com, comptable cmp WHERE a.ID_Commune = com.ID AND a.ID_Directeur = cmp.ID";
            var cmdAgence = new MySqlCommand(Query, c_cnn);
            var reader = cmdAgence.ExecuteReader();
            Dictionary<long, cls_AgenceAvecDirecteur> l_ListeAgenceAvecDirecteur = new Dictionary<long, cls_AgenceAvecDirecteur>();
            Dictionary<long, cls_AgenceAvecDirecteur> l_ListeAgenceAvecDirecteurOriginale = new Dictionary<long, cls_AgenceAvecDirecteur>();
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            Dictionary<long, cls_Comptable> l_ListeComptable = cls_Comptable.getListeComptable;
            cls_AgenceAvecDirecteur l_Agence;
            while (reader.Read())
            {
                l_Agence = new cls_AgenceAvecDirecteur(reader.GetInt64(0), reader.GetString(1), l_ListeCommune[reader.GetInt64(2)], l_ListeComptable[reader.GetInt64(3)]);
                l_ListeAgenceAvecDirecteur.Add(reader.GetInt64(0), l_Agence);
                l_ListeAgenceAvecDirecteurOriginale.Add(reader.GetInt64(0), l_Agence);
            }
            cls_AgenceAvecDirecteur.setListeAgenceAvecDirecteur(l_ListeAgenceAvecDirecteur);
            cls_AgenceAvecDirecteur.setListeAgenceAvecDirecteurOriginale(l_ListeAgenceAvecDirecteurOriginale);
            reader.Close();
        }
        public void UpdateCommune()
        {
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            Dictionary<long, cls_Commune> l_ListeCommuneOriginale = cls_Commune.getListeCommuneOriginale;
            foreach (var Commune in l_ListeCommune)
            {
                if (l_ListeCommuneOriginale.ContainsKey(Commune.Value.ID))
                {
                    string Query = "UPDATE commune SET Nom = '" + Commune.Value.getNom + "' WHERE ID = '" + Commune.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
                else if (l_ListeCommuneOriginale.ContainsKey(Commune.Value.ID) == false)
                {
                    string Query = "INSERT INTO commune VALUES("+Commune.Value.ID+ ",'"+ Commune.Value.getNom +"' )";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
            foreach (var Commune in l_ListeCommuneOriginale)
            {
                if (l_ListeCommune.ContainsKey(Commune.Value.ID) == false)
                {
                    string Query = "DELETE FROM commune WHERE ID = '" + Commune.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
        }
        public void UpdateComptable()
        {
            Dictionary<long, cls_Comptable> l_ListeComptable = cls_Comptable.getListeComptable;
            Dictionary<long, cls_Comptable> l_ListeComptableOriginale = cls_Comptable.getListeComptableOriginale;
            Dictionary<long, cls_AgenceAvecDirecteur> l_ListeAgenceAvecDirecteur = cls_AgenceAvecDirecteur.getListeAgenceAvecDirecteur;
            foreach (var Comptable in l_ListeComptable)
            {
                if (l_ListeAgenceAvecDirecteur.ContainsKey(Comptable.Value.getAgence.ID) && l_ListeComptableOriginale.ContainsKey(Comptable.Value.ID))
                {
                    string Query = "UPDATE comptable SET Nom = '" + Comptable.Value.getNom + "', DateDeNaissance = '" + Comptable.Value.getDatedeNaissance.ToString("yyyy-MM-dd HH:mm:ss") + "' , ID_Agence = '" + Comptable.Value.getAgence.ID + "' WHERE ID = '" + Comptable.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
                else if (l_ListeAgenceAvecDirecteur.ContainsKey(Comptable.Value.getAgence.ID) && l_ListeComptableOriginale.ContainsKey(Comptable.Value.ID) == false)
                {
                    string Query = "INSERT INTO comptable VALUES ('" + Comptable.Value.ID +"', '" + Comptable.Value.getNom + "', '" + Comptable.Value.getDatedeNaissance.ToString("yyyy-MM-dd HH:mm:ss") + "', '" + Comptable.Value.getAgence.ID + "')";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
            foreach (var Comptable in l_ListeComptableOriginale)
            {
                if (l_ListeComptable.ContainsKey(Comptable.Value.ID) == false)
                {
                    string Query = "DELETE FROM Comptable WHERE ID = '" + Comptable.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
        }
        public void UpdateAgenceAvecDirecteur()
        {
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            Dictionary<long, cls_Comptable> l_ListeComptable = cls_Comptable.getListeComptable;
            Dictionary<long, cls_AgenceAvecDirecteur> l_ListeAgenceAvecDirecteur = cls_AgenceAvecDirecteur.getListeAgenceAvecDirecteur;
            Dictionary<long, cls_AgenceAvecDirecteur> l_ListeAgenceAvecDirecteurOriginale = cls_AgenceAvecDirecteur.getListeAgenceAvecDirecteurOriginale;
            foreach (var Agence in l_ListeAgenceAvecDirecteur)
            {
                if (l_ListeCommune.ContainsKey(Agence.Value.getCommune.ID) && l_ListeComptable.ContainsKey(Agence.Value.getDirecteur.ID) && l_ListeAgenceAvecDirecteurOriginale.ContainsKey(Agence.Value.ID))
                {
                    string Query = "UPDATE agence SET Nom = '" + Agence.Value.getNom + "', ID_Commune = '" + Agence.Value.getCommune.ID + "' , ID_Directeur = '" + Agence.Value.getDirecteur.ID + "' WHERE ID = '" + Agence.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn); 
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
                else if (l_ListeCommune.ContainsKey(Agence.Value.getCommune.ID) && l_ListeComptable.ContainsKey(Agence.Value.getDirecteur.ID) && l_ListeAgenceAvecDirecteurOriginale.ContainsKey(Agence.Value.ID) == false)
                {
                    string Query = "INSERT INTO agence VALUES ('" + Agence.Value.ID + "', '" + Agence.Value.getNom + "', '" + Agence.Value.getCommune.ID + "', '" + Agence.Value.getDirecteur.ID + "')";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
            foreach (var Agence in l_ListeAgenceAvecDirecteurOriginale)
            {
                if (l_ListeAgenceAvecDirecteur.ContainsKey(Agence.Value.ID)== false)
                {
                    //foreach (var Comptable in l_ListeComptable)
                    //{
                    //    if(Comptable.Value.getAgence.ID == Agence.Value.ID)
                    //    {
                    //        Comptable.Value.setAgence(null);                            
                    //    }                        
                    //}
                    //UpdateComptable();
                    // fix pour pouvoir supprimer une agence meme si un comptable appartient a l'agence sans supprimer le comptable ( incmoplet)
                    string Query = "DELETE FROM agence WHERE ID = '" + Agence.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
        }
        public void UpdateExploitation()
        {
            Dictionary<long, cls_Commune> l_ListeCommune = cls_Commune.getListeCommune;
            Dictionary<long, cls_Comptable> l_ListeComptable = cls_Comptable.getListeComptable;
            Dictionary<long, cls_Exploitation> l_ListeExploitation = cls_Exploitation.getListeExploitation;
            Dictionary<long, cls_Exploitation> l_ListeExploitationOriginale = cls_Exploitation.getListeExploitationOriginale;

            foreach (var Exploitation in l_ListeExploitation)
            {
                if (l_ListeCommune.ContainsKey(l_ListeExploitation[Exploitation.Value.ID].getCommune.ID) && l_ListeComptable.ContainsKey(l_ListeExploitation[Exploitation.Value.ID].getComptable.ID) && l_ListeExploitationOriginale.ContainsKey(Exploitation.Value.ID))
                {
                    string Query = "UPDATE exploitation SET Nom = '" + Exploitation.Value.getNom + "', SAU = '" + Exploitation.Value.getSAU + "', ID_Comptable = '" + Exploitation.Value.getComptable.ID + "' , ID_Commune = '" + Exploitation.Value.getCommune.ID + "' WHERE ID = '" + Exploitation.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
                else if (l_ListeCommune.ContainsKey(l_ListeExploitation[Exploitation.Value.ID].getCommune.ID) && l_ListeComptable.ContainsKey(l_ListeExploitation[Exploitation.Value.ID].getComptable.ID) && l_ListeExploitationOriginale.ContainsKey(Exploitation.Value.ID) == false)
                {
                    string Query = "INSERT INTO exploitation VALUES('" + Exploitation.Value.ID + "', '" + l_ListeExploitation[Exploitation.Value.ID].getNom + "', '" + l_ListeExploitation[Exploitation.Value.ID].getSAU + "', '" + l_ListeExploitation[Exploitation.Value.ID].getComptable.ID + "', '" + l_ListeExploitation[Exploitation.Value.ID].getCommune.ID + "')";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
            foreach (var Exploitation in l_ListeExploitationOriginale)
            {
                if (l_ListeExploitation.ContainsKey(Exploitation.Value.ID) == false)
                {
                    string Query = "DELETE FROM exploitation WHERE ID = '" + Exploitation.Value.ID + "'; ";
                    var cmdUpdateCommune = new MySqlCommand(Query, c_cnn);
                    var reader = cmdUpdateCommune.ExecuteNonQuery();
                }
            }
        }
        public void UpdateBase()
        {
            UpdateCommune();
            UpdateAgenceAvecDirecteur();
            UpdateComptable();
            UpdateExploitation();

        }
    }
}
